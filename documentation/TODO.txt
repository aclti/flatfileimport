-------------------------------------------------------------------------------
TODO
-------------------------------------------------------------------------------

-- FUNÇCIONALIDADES E REPONSABILIDADES DO IMPORTER -----------------------------
- Atua como  um controller da importação
- É o subject, onde os cliente da importação serão registrados
- Recebe um File para importar
- Recebe uma blueprint para interpretar o arquivo
- Manipula o arquivo, fazendo a leitura, e passa as linhas para um Parse
- Recebe o resultado do parser
- Analisa o resulta do parser, para saber se a importação da linha 
foi bem sucessdia
- Trata os erros, caso existam, que o parser retornou como 
resultadao da importação da linha
- Guarda o status dos matchs da blueprint
- Trata as linha obrigatorias, e a quantiade delas
- Passa o conteudo importado para o cliente
- Descide quando passar esse conteudo
- Faz a validação dos registro
- Faz a totalização da importação
-------------------------------------------------------------------------------

-- DADOS QUE ESTÃO SENDO IMPORTADOS -------------------------------------------
- Avaliar a obrigatoriedade do regsitro
- Avaliar a quantidade de ocorrencias
- Aninhar registro interligados
- Avaliar os Registros ante de enviar para o clinte
- Criar o objeto para armazenar os dados importados

PASSO:
- Identificar a Blueprint
- Ler linha a linha
- Identificar a linha
- Criar os objetos necessários
- Chamar o parser
- Analisar o resultado
- Tomar a decisão:
	- Armazenar
	- Passar para a proxima linha
	- Disparar um erro
-------------------------------------------------------------------------------

-- PATTERN PARA A FUNCIONALIDADE AGGREGATE ------------------------------------
Pesquisar os seguinte patterns para melhorar essa funcionalidade:
	- Command Pattern
	- Decorator Pattern
	- Interator Pattern
-------------------------------------------------------------------------------

-- FAZER JÀ -------------------------------------------------------------------
- Criar a classe para o parse de ParsedData, atualente temos apenas ParseLine
como retorno.
-------------------------------------------------------------------------------

-- ATRIBUTOS DEFAULTS ---------------------------------------------------------
Regex para:
	- Decimal
	- int
	- DateTime (yyyymmddhhssmm)
Deve ser definidar com uma valor default se não for informada na blueprint, 
porém se algum valor for informado o default será sobrescrito.

-------------------------------------------------------------------------------

-- PESQUISA NA BLUEPRINT ------------------------------------------------------
- Ao encontrar um header, a pesquisa irá procurar um footer que tenha
o mesmo pai do header ou não tenha pai no caso do root
- Caso não encontre footer, será buscado um registro do mesmo tipo.
-------------------------------------------------------------------------------

-- CUSTOM TYPES FOR CONVERTION ------------------------------------------------
verificar uma forma de melhora a conversão dos objetos, ja que utiliza regex e 
grupos para identifica poderia pensar em uma forma de passar para o value, 
complexo, um elemento serializado em xml ou json. Isser seria aplicado para 
tipos especiais como por exemplo:
talvez pesar algo do tipo, custom types

class Period{
	public int month;
	public int day
}

dessa forma quando for fazer a conversão seria utilizada esse tipo, e o retorno
seria uma sring da serialização do objeto
-------------------------------------------------------------------------------

-- MELHORIAS DESEJÁVEIS -------------------------------------------------------
A possibilidade de definir na linha quantas vezes ela podera aparecer, ser uma 
linha especial (header, footer, etc....), se é uma linha de totaliza, 
de quem é essa totalização, se ela tem alguma precedencia.

Opção de criar grupos com header, details e footer. Se não for especificado o 
arquivo todo é um mesmo grupo

Implementar somatorio ou contagem de de um derterminado campo linha. Validar 
o resultado contra um determinado campo de uma linha qualquer ou 
contra o footer.
-------------------------------------------------------------------------------